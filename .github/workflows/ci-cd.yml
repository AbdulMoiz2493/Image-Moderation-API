name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install backend dependencies
      run: |
        cd Backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black
        
    - name: Lint backend
      run: |
        cd Backend
        # Install Black explicitly
        pip install black
        # Debug: Show the contents of the file being linted
        cat app/core/database.py
        # Run Flake8 checks
        flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        # Format code with Black
        black app
        # Debug: Show diff if Black check fails
        black --check app || (black --diff app; exit 1)

  build-frontend:
    needs: lint-backend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install frontend dependencies
      run: |
        cd Frontend
        npm install
        
    - name: Build frontend
      run: |
        cd Frontend
        npm run build

  build-push-containers:
    needs: build-frontend
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.serverStatus()'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push backend image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/image-moderation-backend:latest -f Backend/Dockerfile .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/image-moderation-backend:latest
        
    - name: Build and push frontend image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/image-moderation-frontend:latest -f Frontend/Dockerfile Frontend/
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/image-moderation-frontend:latest